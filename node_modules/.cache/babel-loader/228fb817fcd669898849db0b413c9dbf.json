{"ast":null,"code":"var _jsxFileName = \"/Users/robertyarborough/Labs/react-mini-apps/BOA-REACT-Pagination/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchMovies } from './_service/fetchMoviesAPI';\nimport Table from './components/Table';\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const api_key = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    fetchMovies.get(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`).then(data => {\n      if (data) {\n        setLoading(true);\n        setTotalPages(data.total_pages);\n        setItems(data.results);\n        setLoading(false);\n      }\n    }).catch(error => console.log(error));\n  }, [api_key]); // get current items\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem); // change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      items: currentItems,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      itemsPerPage: itemsPerPage,\n      totalItems: items.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lkDeugA3Pdx8u0S7iUlOOT6kB+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robertyarborough/Labs/react-mini-apps/BOA-REACT-Pagination/src/App.js"],"names":["React","useState","useEffect","fetchMovies","Table","Pagination","App","items","setItems","loading","setLoading","totalPages","setTotalPages","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","api_key","process","env","REACT_APP_API_KEY","get","then","data","total_pages","results","catch","error","console","log","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMgB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACkB,GAAZ,CAAiB,sDAAqDJ,OAAQ,EAA9E,EAAiFK,IAAjF,CAAuFC,IAAD,IAAU;AAC5F,UAAGA,IAAH,EAAQ;AACNb,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,aAAa,CAACW,IAAI,CAACC,WAAN,CAAb;AACAhB,QAAAA,QAAQ,CAACe,IAAI,CAACE,OAAN,CAAR;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACJ,KAPD,EAOGgB,KAPH,CAOUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPpB;AAQD,GATQ,EASN,CAACV,OAAD,CATM,CAAT,CAVY,CAsBZ;;AACA,QAAMa,eAAe,GAAGjB,WAAW,GAAGE,YAAtC;AACA,QAAMgB,gBAAgB,GAAGD,eAAe,GAAGf,YAA3C;AACA,QAAMiB,YAAY,GAAGzB,KAAK,CAAC0B,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAzBY,CA4BZ;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIrB,cAAc,CAACqB,UAAD,CAA7C;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE1B,OAAhB;AAAyB,MAAA,KAAK,EAAEuB,YAAhC;AAA8C,MAAA,UAAU,EAAErB;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,YAAY,EAAEI,YADhB;AAEE,MAAA,UAAU,EAAER,KAAK,CAAC6B,MAFpB;AAGE,MAAA,QAAQ,EAAEF;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzCQ5B,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fetchMovies} from './_service/fetchMoviesAPI';\nimport Table from './components/Table';\nimport Pagination from \"./components/Pagination\";\n\nfunction App(){\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const api_key = process.env.REACT_APP_API_KEY;\n\n\n\n  useEffect(() => {\n    fetchMovies.get(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`).then((data) => {\n        if(data){\n          setLoading(true);\n          setTotalPages(data.total_pages);\n          setItems(data.results);\n          setLoading(false);\n        }\n    }).catch((error) => console.log(error));\n  }, [api_key]);\n\n\n  // get current items\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n\n  // change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n  return (\n    <div className=\"App\">\n      <Table loading={loading} items={currentItems} totalPages={totalPages}/>\n      <Pagination\n        itemsPerPage={itemsPerPage}\n        totalItems={items.length}\n        paginate={paginate} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}