{"ast":null,"code":"var _jsxFileName = \"/Users/robertyarborough/Labs/react-mini-apps/BOA-REACT-Pagination/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchMovies } from './_service/fetchMoviesAPI';\nimport Table from './components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const api_key = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    fetchMovies.get(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`).then(data => {\n      if (data) {\n        setLoading(true);\n        setItems(data.results);\n        setLoading(false);\n      }\n    }).catch(error => console.log(error));\n  }, [api_key]); // get current items\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem); // change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      loading: loading,\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C9WQ0UkQplxzuCfFNdochZqzpJQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/robertyarborough/Labs/react-mini-apps/BOA-REACT-Pagination/src/App.js"],"names":["React","useState","useEffect","fetchMovies","Table","App","items","setItems","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","api_key","process","env","REACT_APP_API_KEY","get","then","data","results","catch","error","console","log","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMa,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACe,GAAZ,CAAiB,sDAAqDJ,OAAQ,EAA9E,EAAiFK,IAAjF,CAAuFC,IAAD,IAAU;AAC5F,UAAGA,IAAH,EAAQ;AACNX,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,QAAQ,CAACa,IAAI,CAACC,OAAN,CAAR;AACAZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACJ,KAND,EAMGa,KANH,CAMUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANpB;AAOD,GARQ,EAQN,CAACT,OAAD,CARM,CAAT,CATa,CAoBb;;AACA,QAAMY,eAAe,GAAGhB,WAAW,GAAGE,YAAtC;AACA,QAAMe,gBAAgB,GAAGD,eAAe,GAAGd,YAA3C;AACA,QAAMgB,YAAY,GAAGtB,KAAK,CAACuB,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CAvBa,CA0Bb;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIpB,cAAc,CAACoB,UAAD,CAA7C;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEvB,OAAhB;AAAyB,MAAA,KAAK,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnCQD,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {fetchMovies} from './_service/fetchMoviesAPI';\nimport Table from './components/Table';\n\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const api_key = process.env.REACT_APP_API_KEY;\n\n\n\n  useEffect(() => {\n    fetchMovies.get(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}`).then((data) => {\n        if(data){\n          setLoading(true);\n          setItems(data.results);\n          setLoading(false);\n        }\n    }).catch((error) => console.log(error));\n  }, [api_key]);\n\n\n  // get current items\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n\n  // change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n  return (\n    <div className=\"App\">\n      <Table loading={loading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}