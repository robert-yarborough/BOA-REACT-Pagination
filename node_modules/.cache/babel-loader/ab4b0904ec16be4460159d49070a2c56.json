{"ast":null,"code":"function get(url) {\n  const requestConfiguration = {\n    method: 'GET'\n  };\n  return fetch(url, requestConfiguration).then(handleResponse);\n} // handle response\n// function handleResponse(response){\n//   return response.json().then((jsonResponse) => {\n//     if(!jsonResponse.ok){\n//       const error = jsonResponse.message || jsonResponse.statusText;\n//       return  Promise.reject(error);\n//     }\n//   });\n// }\n\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nexport const fetchMovies = {\n  get\n};","map":{"version":3,"sources":["/Users/robertyarborough/Labs/react-mini-apps/BOA-REACT-Pagination/src/_service/fetchMoviesAPI.js"],"names":["get","url","requestConfiguration","method","fetch","then","handleResponse","response","text","data","JSON","parse","ok","error","message","statusText","Promise","reject","fetchMovies"],"mappings":"AAAA,SAASA,GAAT,CAAaC,GAAb,EAAiB;AACf,QAAMC,oBAAoB,GAAG;AAC3BC,IAAAA,MAAM,EAAE;AADmB,GAA7B;AAGA,SAAOC,KAAK,CAACH,GAAD,EAAMC,oBAAN,CAAL,CAAiCG,IAAjC,CAAsCC,cAAtC,CAAP;AACD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASA,cAAT,CAAwBC,QAAxB,EAAiC;AAC/B,SAAOA,QAAQ,CAACC,IAAT,GAAgBH,IAAhB,CAAsBG,IAAD,IAAU;AACpC,UAAMC,IAAI,GAAGD,IAAI,IAAIE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAArB;;AAEA,QAAG,CAACD,QAAQ,CAACK,EAAb,EAAgB;AACd,YAAMC,KAAK,GAAIJ,IAAI,IAAIA,IAAI,CAACK,OAAd,IAA0BP,QAAQ,CAACQ,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;;AACD,WAAOJ,IAAP;AACD,GARM,CAAP;AASD;;AAED,OAAO,MAAMS,WAAW,GAAG;AACzBlB,EAAAA;AADyB,CAApB","sourcesContent":["function get(url){\n  const requestConfiguration = {\n    method: 'GET'\n  };\n  return fetch(url, requestConfiguration).then(handleResponse);\n}\n\n\n// handle response\n// function handleResponse(response){\n//   return response.json().then((jsonResponse) => {\n//     if(!jsonResponse.ok){\n//       const error = jsonResponse.message || jsonResponse.statusText;\n//       return  Promise.reject(error);\n//     }\n//   });\n// }\n\n\nfunction handleResponse(response){\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n\n    if(!response.ok){\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n    return data;\n  })\n}\n\nexport const fetchMovies = {\n  get,\n}"]},"metadata":{},"sourceType":"module"}